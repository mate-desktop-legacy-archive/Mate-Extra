<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="PolKitMateContext">
<refmeta>
<refentrytitle role="top_of_page" id="PolKitMateContext.top_of_page">PolKitMateContext</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>POLKIT-MATE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>PolKitMateContext</refname>
<refpurpose>Convenience functions for using PolicyKit from GTK+ and MATE applications.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="PolKitMateContext.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="POLKIT-MATE-CONTEXT-ERROR:CAPS">POLKIT_MATE_CONTEXT_ERROR</link>
enum                <link linkend="PolKitMateContextError">PolKitMateContextError</link>;
                    <link linkend="PolKitMateContextPrivate">PolKitMateContextPrivate</link>;
                    <link linkend="PolKitMateContext-struct">PolKitMateContext</link>;
<link linkend="PolKitMateContext">PolKitMateContext</link>* <link linkend="polkit-mate-context-get">polkit_mate_context_get</link>            (<link linkend="GError">GError</link> **error);
<link linkend="GQuark">GQuark</link>              <link linkend="polkit-mate-context-error-quark">polkit_mate_context_error_quark</link>    (void);
</synopsis>
</refsynopsisdiv>

<refsect1 id="PolKitMateContext.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----PolKitMateContext
</synopsis>

</refsect1>






<refsect1 id="PolKitMateContext.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="PolKitMateContext-config-changed">config-changed</link>&quot;                                 : Run Last
  &quot;<link linkend="PolKitMateContext-console-kit-db-changed">console-kit-db-changed</link>&quot;                         : Run Last
</synopsis>
</refsect1>


<refsect1 id="PolKitMateContext.description" role="desc">
<title role="desc.title">Description</title>
<para>
This class provides convenience functions for using PolicyKit from
GTK+ and MATE applications including setting up main loop
integration and system bus connections. Rather than using
callbacks, GObject signals are provided when external factors
change (e.g. the PolicyKit.conf configuration file changes or
ConsoleKit reports activity changes).
</para>
<para>
Actual usage of PolicyKit is still through the main PolicyKit API
through the public pk_context and pk_tracker variables.
</para>
<para>
This class is implemented as a singleton meaning that several
callers will share the underlying <link linkend="PolKitContext"><type>PolKitContext</type></link> and <link linkend="PolKitTracker"><type>PolKitTracker</type></link>
objects. Do not use any of the life cycle methods of these objects;
only use them to gather information.</para>
<para>

</para>
</refsect1>

<refsect1 id="PolKitMateContext.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="POLKIT-MATE-CONTEXT-ERROR:CAPS" role="macro">
<title>POLKIT_MATE_CONTEXT_ERROR</title>
<indexterm zone="POLKIT-MATE-CONTEXT-ERROR:CAPS"><primary>POLKIT_MATE_CONTEXT_ERROR</primary></indexterm><programlisting>#define POLKIT_MATE_CONTEXT_ERROR polkit_mate_context_error_quark ()
</programlisting>
<para>
Error domain for using the MATE PolicyKit context. Errors in this
domain will be from the <link linkend="PolKitMateContextError"><type>PolKitMateContextError</type></link> enumeration. See
<link linkend="GError"><type>GError</type></link> for information on error domains.</para>
<para>

</para></refsect2>
<refsect2 id="PolKitMateContextError" role="enum">
<title>enum PolKitMateContextError</title>
<indexterm zone="PolKitMateContextError"><primary>PolKitMateContextError</primary></indexterm><programlisting>typedef enum
{
        POLKIT_MATE_CONTEXT_ERROR_FAILED
} PolKitMateContextError;
</programlisting>
<para>
Error codes describing how <link linkend="PolKitMateContext"><type>PolKitMateContext</type></link> can fail.</para>
<para>

</para><variablelist role="enum">
<varlistentry id="POLKIT-MATE-CONTEXT-ERROR-FAILED:CAPS" role="constant">
<term><literal>POLKIT_MATE_CONTEXT_ERROR_FAILED</literal></term>
<listitem><simpara> General error
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="PolKitMateContextPrivate" role="struct">
<title>PolKitMateContextPrivate</title>
<indexterm zone="PolKitMateContextPrivate"><primary>PolKitMateContextPrivate</primary></indexterm><programlisting>typedef struct _PolKitMateContextPrivate PolKitMateContextPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2 id="PolKitMateContext-struct" role="struct">
<title>PolKitMateContext</title>
<indexterm zone="PolKitMateContext-struct"><primary>PolKitMateContext</primary></indexterm><programlisting>typedef struct {
        PolKitContext *pk_context;
        PolKitTracker *pk_tracker;
} PolKitMateContext;
</programlisting>
<para>
Provide access to <link linkend="PolKitContext"><type>PolKitContext</type></link> and <link linkend="PolKitTracker"><type>PolKitTracker</type></link> instances
shared among many callers.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><link linkend="PolKitContext">PolKitContext</link>&nbsp;*<structfield>pk_context</structfield>;</term>
<listitem><simpara> for interfacing with PolicyKit; e.g. typically <link linkend="polkit-context-can-caller-do-action"><function>polkit_context_can_caller_do_action()</function></link>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="PolKitTracker">PolKitTracker</link>&nbsp;*<structfield>pk_tracker</structfield>;</term>
<listitem><simpara> this is used for effieciently obtaining <link linkend="PolKitCaller"><type>PolKitCaller</type></link> objects
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-mate-context-get" role="function">
<title>polkit_mate_context_get ()</title>
<indexterm zone="polkit-mate-context-get"><primary>polkit_mate_context_get</primary></indexterm><programlisting><link linkend="PolKitMateContext">PolKitMateContext</link>* polkit_mate_context_get            (<link linkend="GError">GError</link> **error);</programlisting>
<para>
Returns a <link linkend="PolKitMateContext"><type>PolKitMateContext</type></link> object. The context is a global
singleton that may be shared with other callers of this function.
</para>
<para>
This operation can fail if the system message bus is not available.
</para>
<para>
When done with using this object, call <link linkend="g-object-unref"><function>g_object_unref()</function></link>. This is
such that resources can be freed when all callers have unreffed it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for error
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="PolKitMateContext"><type>PolKitMateContext</type></link> or NULL if error is set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-mate-context-error-quark" role="function">
<title>polkit_mate_context_error_quark ()</title>
<indexterm zone="polkit-mate-context-error-quark"><primary>polkit_mate_context_error_quark</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>              polkit_mate_context_error_quark    (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="PolKitMateContext.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="PolKitMateContext-config-changed"><title>The <literal>&quot;config-changed&quot;</literal> signal</title>
<indexterm zone="PolKitMateContext-config-changed"><primary>PolKitMateContext::config-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="PolKitMateContext">PolKitMateContext</link> *context,
                                                        <link linkend="gpointer">gpointer</link>            user_data)      : Run Last</programlisting>
<para>
The ::config-changed signal is emitted when PolicyKit
configuration (e.g. /etc/PolicyKit/PolicyKit.conf or
.policy files) changes content.
</para>
<para>
As this is one contributing factor to what answer PolicyKit
will return, the caller should act on this signal and query
PolicyKit for any actions it cares about.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> the object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="PolKitMateContext-console-kit-db-changed"><title>The <literal>&quot;console-kit-db-changed&quot;</literal> signal</title>
<indexterm zone="PolKitMateContext-console-kit-db-changed"><primary>PolKitMateContext::console-kit-db-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="PolKitMateContext">PolKitMateContext</link> *context,
                                                        <link linkend="gpointer">gpointer</link>            user_data)      : Run Last</programlisting>
<para>
The ::console-kit-db-changed signal is emitted when
ConsoleKit configuration changes; e.g. when a session
becomes active or inactive.
</para>
<para>
As this is one contributing factor to what answer PolicyKit
will return, the caller should act on this signal and query
PolicyKit for any actions it cares about.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> the object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
