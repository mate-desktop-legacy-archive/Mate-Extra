/* -*- Mode: C; c-basic-offset: 4 -*- */
%%
headers
#include <Python.h>

#define NO_IMPORT_PYGOBJECT
#include <pygobject.h>

#include <libmateprintui/mate-print-dialog.h>
#include <libmateprintui/mate-font-dialog.h>
#include <libmateprintui/mate-print-job-preview.h>
#include <libmateprintui/mate-print-preview.h>
#include <libmateprintui/mate-print-paper-selector.h>
#include <libmateprintui/mate-print-unit-selector.h>

#include "config.h"

    /* This should (and will) be in mate-print-config.h */
#define MATE_TYPE_PRINT_CONFIG         (mate_print_config_get_type ())
#define MATE_PRINT_CONFIG(o)           (G_TYPE_CHECK_INSTANCE_CAST ((o), MATE_TYPE_PRINT_CONFIG, MatePrintConfig))
#define MATE_PRINT_CONFIG_CLASS(k)     (G_TYPE_CHECK_CLASS_CAST ((k), MATE_TYPE_PRINT_CONFIG, MatePrintConfigClass))
#define MATE_IS_PRINT_CONFIG(o)        (G_TYPE_CHECK_INSTANCE_TYPE ((o), MATE_TYPE_PRINT_CONFIG))
#define MATE_IS_PRINT_CONFIG_CLASS(k)  (G_TYPE_CHECK_CLASS_TYPE ((k), MATE_TYPE_PRINT_CONFIG))
#define MATE_PRINT_CONFIG_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), MATE_TYPE_PRINT_CONFIG, MatePrintConfigClass))


%%
modulename mateprint.ui
%%
import gobject.GObject     as PyGObject_Type
import mateprint.Job      as PyMatePrintJob_Type
import mateprint.Context  as PyMatePrintContext_Type
import mateprint.Config   as PyMatePrintConfig_Type
import mateprint.Font     as PyMateFont_Type
import mateprint.FontFace as PyMateFontFace_Type
import gtk.Dialog          as PyGtkDialog_Type
import gtk.Window          as PyGtkWindow_Type
import gtk.Widget          as PyGtkWidget_Type
import matecanvas.Canvas  as PyMateCanvas_Type
%%
ignore-glob 
  *_get_type

%%
override mate_print_dialog_get_copies
static PyObject *
_wrap_mate_print_dialog_get_copies(PyGObject *self)
{
    int copies;
    gboolean collate;

    mate_print_dialog_get_copies(MATE_PRINT_DIALOG(self->obj), &copies,
				  &collate);
    return Py_BuildValue("ii", copies, collate);
}

%%
override mate_print_dialog_get_range_page
static PyObject *
_wrap_mate_print_dialog_get_range_page(PyGObject *self)
{
    gint ret, start, end;

    ret = mate_print_dialog_get_range_page(MATE_PRINT_DIALOG(self->obj), &start, &end);
    return Py_BuildValue("iii", ret, start, end);
}

