;; -*- scheme -*-

;; object definitions ...
(define-object Dialog
  (parent "GtkDialog")
  (c-name "MatePrintDialog")
  (gtype-id "MATE_TYPE_PRINT_DIALOG")
)

(define-object Preview
  (parent "MatePrintContext")
  (c-name "MatePrintPreview")
  (gtype-id "MATE_TYPE_PRINT_PREVIEW")
)

(define-object JobPreview
  (parent "GtkWindow")
  (c-name "MatePrintJobPreview")
  (gtype-id "MATE_TYPE_PRINT_JOB_PREVIEW")
)

(define-object PaperSelector
  (parent "GtkWidget")
  (c-name "MatePaperSelector")
  (gtype-id "MATE_TYPE_PAPER_SELECTOR")
)

(define-object FontSelection
  (parent "GtkWidget")
  (c-name "MateFontSelection")
  (gtype-id "MATE_TYPE_FONT_SELECTION")
)

(define-object FontPreview
  (parent "GtkWidget")
  (c-name "MateFontPreview")
  (gtype-id "MATE_TYPE_FONT_PREVIEW")
)

(define-object FontDialog
  (parent "GtkDialog")
  (c-name "MateFontDialog")
  (gtype-id "MATE_TYPE_FONT_DIALOG")
)


;; mate-print-dialog.h

(define-function mate_print_dialog_new
  (is-constructor-of "MatePrintDialog")
  (c-name "mate_print_dialog_new")
  (return-type "MatePrintDialog*")
  (parameters
   '("MatePrintJob*" "job")
   '("const-gchar*"   "title")
   '("gint"           "flags" (default "0")))
)


(define-method get_copies
  (of-object "MatePrintDialog")
  (c-name "mate_print_dialog_get_copies")
  (return-type "gint")	; actually return is ( copies(int), collate(boolean) )
)

(define-method set_copies
  (of-object "MatePrintDialog")
  (c-name "mate_print_dialog_set_copies")
  (return-type "none")
  (parameters
   '("gint" "copies")
   '("gboolean" "collate")
   )
)

(define-method get_config
  (of-object "MatePrintDialog")
  (c-name "mate_print_dialog_get_config")
  (return-type "MatePrintConfig*")
)

(define-method get_range
  (of-object "MatePrintDialog")
  (c-name "mate_print_dialog_get_range")
  (return-type "gint")
)

(define-method get_range_page
  (of-object "MatePrintDialog")
  (c-name "mate_print_dialog_get_range_page")
  (return-type "gint")
)


(define-method construct_range_custom
  (of-object "MatePrintDialog")
  (c-name "mate_print_dialog_construct_range_custom")
  (parameters
   '("GtkWidget*" "custom"))
  (return-type "none")
)

(define-method construct_range_any
  (of-object "MatePrintDialog")
  (c-name "mate_print_dialog_construct_range_any")
  (parameters
   '("gint" 	    "flags")
   '("GtkWidget*"   "rage_widget")
   '("const-gchar*" "currentlabel")
   '("const-gchar*" "rangelabel"))
  (return-type "none")
)

(define-method construct_range_page
  (of-object "MatePrintDialog")
  (c-name "mate_print_dialog_construct_range_page")
  (parameters
   '("gint" 	    "flags")
   '("gint"         "start")
   '("gint"         "end")
   '("const-gchar*" "currentlabel")
   '("const-gchar*" "rangelabel"))
  (return-type "none")
)

;; mate-print-preview.h

(define-function mate_print_preview_new
  (is-constructor-of "MatePrintPreview")
  (c-name "mate_print_preview_new")
  (return-type "MatePrintContext*")
  (parameters
   '("MatePrintConfig*" "config")
   '("MateCanvas*"      "canvas"))
)

;; mate-print-job-preview.h

(define-function mate_print_job_preview_new
  (is-constructor-of "MatePrintJobPreview")
  (c-name "mate_print_job_preview_new")
  (return-type "GtkWidget*")
  (parameters
   '("MatePrintJob*" "job")
   '("const-gchar*"   "title"))
)

;; mate-print-paper-selector.h

(define-function mate_print_paper_selector_new_with_flags
  (is-constructor-of "MatePaperSelector")
  (c-name "mate_paper_selector_new_with_flags")
  (return-type "GtkWidget*")
  (parameters
   '("MatePrintConfig*" "config")
   '("gint"              "flags" (default "0")))
)

;; mate-font-dialog.h


(define-function mate_font_selection_new
  (is-constructor-of "MateFontSelection")
  (c-name "mate_font_selection_new")
  (return-type "GtkWidget*")
)

(define-method get_face
  (of-object "MateFontSelection")
  (c-name "mate_font_selection_get_face")
  (return-type "MateFontFace*")
)

(define-method get_size
  (of-object "MateFontSelection")
  (c-name "mate_font_selection_get_size")
  (return-type "gdouble")
)

(define-method get_font
  (of-object "MateFontSelection")
  (c-name "mate_font_selection_get_font")
  (return-type "MateFont*")
)

(define-method set_font
  (of-object "MateFontSelection")
  (c-name "mate_font_selection_set_font")
  (return-type "none")
  (parameters
   '("MateFont*" "font"))
)

(define-function mate_font_preview_new
  (is-constructor-of "MateFontPreview")
  (c-name "mate_font_preview_new")
  (return-type "GtkWidget*")
)

(define-method set_phrase
  (of-object "MateFontPreview")
  (c-name "mate_font_preview_set_phrase")
  (return-type "none")
  (parameters
   '("const-gchar*" "phrase"))
)

(define-method set_font
  (of-object "MateFontPreview")
  (c-name "mate_font_preview_set_font")
  (return-type "none")
  (parameters
   '("MateFont*" "font"))
)

(define-method set_color
  (of-object "MateFontPreview")
  (c-name "mate_font_preview_set_color")
  (return-type "none")
  (parameters
   '("guint32" "color"))
)

(define-function mate_font_dialog_new
  (is-constructor-of "MateFontDialog")
  (c-name "mate_font_dialog_new")
  (return-type "GtkWidget*")
  (parameters
   '("const-gchar*" "title"))
)

(define-method get_fontsel
  (of-object "MateFontDialog")
  (c-name "mate_font_dialog_get_fontsel")
  (return-type "GtkWidget*")
)

(define-method get_preview
  (of-object "MateFontDialog")
  (c-name "mate_font_dialog_get_preview")
  (return-type "GtkWidget*")
)

