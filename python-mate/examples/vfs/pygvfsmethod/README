This a Mate VFS module written in python that lets you browse python modules and objects.

How to test:
------------
 cp pyfs.conf ~/.mate2/vfs/modules/
 export PYTHONPATH=$(pwd):$PYTHONPATH
 mkdir /tmp/testing
 export TMPDIR=/tmp/testing
 caja --no-desktop pyfs:///

 You will be presented with a list of modules and you can navigate
modules/objects.  Notice that only currently imported modules appear
initially, but if you hit Ctr-L you can force browsing of particular
modules by entering pyfs:///<module> as URL.  For example,
pyfs:///gtk/gdk will let you browse the module gtk.gdk.

How does MateVFS decide to use your module:
--------------------------------------------

Suppose you want to register some code to handle 'pyfs://'.  You put
"pyfs: pythonmethod" in a mate-vfs configuration file[1].  Therefore,
when a pyfs:// URI is requested, mate-vfs loads libpythonmethod.so,
which receives the 'pyfs' method name and then tries to import the
python module 'pyfs'.  The standard python path, plus
$(libdir)/mate-vfs-2.0/modules, is searched for the module.  In this
module, it looks for a class called 'pyfs_method'.  It then creates a
new instance of this class, and tries to get the vfs_xxxx methods,
which are then used to implement the VFS operations.

Caveat: currently the class has to be an old-style class, so don't
subclass object.

[1] As you are asked to do in the "How to test" section; but notice
that to install it system-wide you have to copy the file to
/etc/mate-vfs-2.0/modules/ instead of ~/.mate2/vfs/modules/.
