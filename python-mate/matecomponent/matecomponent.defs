;; -*- scheme -*-

(include "matecomponent-types.defs")

;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-arg.h

(define-function arg_new_from
  (c-name "matecomponent_arg_new_from")
  (return-type "MateComponentArg*")
  (caller-owns-return #f)
  (parameters
    '("MateComponentArgType" "t")
    '("gconstpointer" "data")
  )
)

(define-method release
  (of-object "MateComponentArg")
  (c-name "matecomponent_arg_release")
  (return-type "none")
)

(define-method copy
  (of-object "MateComponentArg")
  (c-name "matecomponent_arg_copy")
  (return-type "MateComponentArg*")
)

(define-method from_gvalue
  (of-object "MateComponentArg")
  (c-name "matecomponent_arg_from_gvalue")
  (return-type "none")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function arg_type_from_gtype
  (c-name "matecomponent_arg_type_from_gtype")
  (return-type "MateComponentArgType")
  (parameters
    '("GType" "t")
  )
)

(define-function arg_to_gvalue
  (c-name "matecomponent_arg_to_gvalue")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-MateComponentArg*" "arg")
  )
)

(define-method to_gtype
  (of-object "MateComponentArgType")
  (c-name "matecomponent_arg_type_to_gtype")
  (return-type "GType")
)

(define-method is_equal
  (of-object "MateComponentArg")
  (c-name "matecomponent_arg_is_equal")
  (return-type "gboolean")
  (parameters
    '("const-MateComponentArg*" "b")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-method is_equal
  (of-object "MateComponentArgType")
  (c-name "matecomponent_arg_type_is_equal")
  (return-type "gboolean")
  (parameters
    '("MateComponentArgType" "b")
    '("CORBA_Environment*" "opt_ev")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-config-database.h

(define-function config_get_string_with_default
  (c-name "matecomponent_config_get_string_with_default")
  (return-type "gchar*")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gchar*" "defval")
    '("gboolean*" "def")
  )
)

(define-function config_get_short
  (c-name "matecomponent_config_get_short")
  (return-type "gint16")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_get_short_with_default
  (c-name "matecomponent_config_get_short_with_default")
  (return-type "gint16")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gint16" "defval")
    '("gboolean*" "def")
  )
)

(define-function config_get_ushort
  (c-name "matecomponent_config_get_ushort")
  (return-type "guint16")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_get_ushort_with_default
  (c-name "matecomponent_config_get_ushort_with_default")
  (return-type "guint16")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("guint16" "defval")
    '("gboolean*" "def")
  )
)

(define-function config_get_long
  (c-name "matecomponent_config_get_long")
  (return-type "gint32")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_get_long_with_default
  (c-name "matecomponent_config_get_long_with_default")
  (return-type "gint32")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gint32" "defval")
    '("gboolean*" "def")
  )
)

(define-function config_get_ulong
  (c-name "matecomponent_config_get_ulong")
  (return-type "guint32")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_get_ulong_with_default
  (c-name "matecomponent_config_get_ulong_with_default")
  (return-type "guint32")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("guint32" "defval")
    '("gboolean*" "def")
  )
)

(define-function config_get_float
  (c-name "matecomponent_config_get_float")
  (return-type "gfloat")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_get_float_with_default
  (c-name "matecomponent_config_get_float_with_default")
  (return-type "gfloat")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gfloat" "defval")
    '("gboolean*" "def")
  )
)

(define-function config_get_double
  (c-name "matecomponent_config_get_double")
  (return-type "gdouble")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_get_double_with_default
  (c-name "matecomponent_config_get_double_with_default")
  (return-type "gdouble")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gdouble" "defval")
    '("gboolean*" "def")
  )
)

(define-function config_get_boolean
  (c-name "matecomponent_config_get_boolean")
  (return-type "gboolean")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_get_boolean_with_default
  (c-name "matecomponent_config_get_boolean_with_default")
  (return-type "gboolean")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gboolean" "defval")
    '("gboolean*" "def")
  )
)

(define-function config_get_char
  (c-name "matecomponent_config_get_char")
  (return-type "gchar")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_get_char_with_default
  (c-name "matecomponent_config_get_char_with_default")
  (return-type "gchar")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gchar" "defval")
    '("gboolean*" "def")
  )
)

(define-function config_get_value
  (c-name "matecomponent_config_get_value")
  (return-type "CORBA_any*")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_TypeCode" "opt_tc")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_string
  (c-name "matecomponent_config_set_string")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("const-char*" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_short
  (c-name "matecomponent_config_set_short")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gint16" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_ushort
  (c-name "matecomponent_config_set_ushort")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("guint16" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_long
  (c-name "matecomponent_config_set_long")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gint32" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_ulong
  (c-name "matecomponent_config_set_ulong")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("guint32" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_float
  (c-name "matecomponent_config_set_float")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gfloat" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_double
  (c-name "matecomponent_config_set_double")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gdouble" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_boolean
  (c-name "matecomponent_config_set_boolean")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gboolean" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_char
  (c-name "matecomponent_config_set_char")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("gchar" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function config_set_value
  (c-name "matecomponent_config_set_value")
  (return-type "none")
  (parameters
    '("MateComponent_ConfigDatabase" "db")
    '("const-char*" "key")
    '("CORBA_any*" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-context.h

(define-function context_add
  (c-name "matecomponent_context_add")
  (return-type "none")
  (parameters
    '("const-CORBA_char*" "context_name")
    '("MateComponent_Unknown" "context")
  )
)

(define-function context_running_get
  (c-name "matecomponent_context_running_get")
  (return-type "MateComponentObject*")
)

(define-function running_context_auto_exit_unref
  (c-name "matecomponent_running_context_auto_exit_unref")
  (return-type "none")
  (parameters
    '("MateComponentObject*" "object")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-event-source.h

(define-function event_source_get_type
  (c-name "matecomponent_event_source_get_type")
  (return-type "GType")
)

(define-function event_source_new
  (c-name "matecomponent_event_source_new")
  (is-constructor-of MateComponentEventSource)
  (return-type "MateComponentEventSource*")
  (caller-owns-return #f)
)

(define-method notify_listeners
  (of-object "MateComponentEventSource")
  (c-name "matecomponent_event_source_notify_listeners")
  (return-type "none")
  (parameters
    '("const-char*" "event_name")
    '("const-CORBA_any*" "opt_value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-method notify_listeners_full
  (of-object "MateComponentEventSource")
  (c-name "matecomponent_event_source_notify_listeners_full")
  (return-type "none")
  (parameters
    '("const-char*" "path")
    '("const-char*" "type")
    '("const-char*" "subtype")
    '("const-CORBA_any*" "opt_value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function event_source_client_remove_listener
  (c-name "matecomponent_event_source_client_remove_listener")
  (return-type "none")
  (parameters
    '("MateComponent_Unknown" "object")
    '("MateComponent_Listener" "listener")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function event_source_client_add_listener
  (c-name "matecomponent_event_source_client_add_listener")
  (return-type "none")
  (parameters
    '("MateComponent_Unknown" "object")
    '("MateComponentListenerCallbackFn" "event_callback")
    '("const-char*" "opt_mask")
    '("CORBA_Environment*" "opt_ev")
    '("gpointer" "user_data")
  )
)

(define-function event_source_client_add_listener_closure
  (c-name "matecomponent_event_source_client_add_listener_closure")
  (return-type "none")
  (parameters
    '("MateComponent_Unknown" "object")
    '("GClosure*" "callback")
    '("const-char*" "opt_mask")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function event_source_client_add_listener_full
  (c-name "matecomponent_event_source_client_add_listener_full")
  (return-type "MateComponent_Listener")
  (caller-owns-return #f)
  (parameters
    '("MateComponent_Unknown" "object")
    '("GClosure*" "callback")
    '("const-char*" "opt_mask")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-method ignore_listeners
  (of-object "MateComponentEventSource")
  (c-name "matecomponent_event_source_ignore_listeners")
  (return-type "none")
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-exception.h

(define-function exception_repoid_to_text
  (c-name "matecomponent_exception_repoid_to_text")
  (return-type "char*")
  (parameters
    '("const-char*" "repo_id")
  )
)

(define-function exception_add_handler_str
  (c-name "matecomponent_exception_add_handler_str")
  (return-type "none")
  (parameters
    '("const-char*" "repo_id")
    '("const-char*" "str")
  )
)

(define-function exception_add_handler_fn
  (c-name "matecomponent_exception_add_handler_fn")
  (return-type "none")
  (parameters
    '("const-char*" "repo_id")
    '("MateComponentExceptionFn" "fn")
    '("gpointer" "user_data")
    '("GDestroyNotify" "destroy_fn")
  )
)

(define-function exception_general_error_set
  (c-name "matecomponent_exception_general_error_set")
  (return-type "none")
  (parameters
    '("CORBA_Environment*" "ev")
    '("CORBA_TypeCode" "opt_deriv")
    '("const-char*" "format")
  )
  (varargs #t)
)

(define-function exception_general_error_get
  (c-name "matecomponent_exception_general_error_get")
  (return-type "const-char*")
  (parameters
    '("CORBA_Environment*" "ev")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-generic-factory.h

(define-function generic_factory_get_type
  (c-name "matecomponent_generic_factory_get_type")
  (return-type "GType")
)

(define-function generic_factory_new
  (c-name "matecomponent_generic_factory_new")
  (is-constructor-of MateComponentGenericFactory)
  (return-type "MateComponentGenericFactory*")
  (caller-owns-return #f)
  (parameters
    '("const-char*" "act_iid")
    '("MateComponentFactoryCallback" "factory_cb")
    '("gpointer" "user_data")
  )
)

(define-function generic_factory_new_closure
  (c-name "matecomponent_generic_factory_new_closure")
  (is-constructor-of MateComponentGenericFactory)  
  (return-type "MateComponentGenericFactory*")
  (caller-owns-return #f)
  (parameters
    '("const-char*" "act_iid")
    '("GClosure*" "factory_closure")
  )
)

(define-method construct
  (of-object "MateComponentGenericFactory")
  (c-name "matecomponent_generic_factory_construct")
  (return-type "MateComponentGenericFactory*")
  (parameters
    '("const-char*" "act_iid")
    '("GClosure*" "factory_cb")
  )
)

(define-method construct_noreg
  (of-object "MateComponentGenericFactory")
  (c-name "matecomponent_generic_factory_construct_noreg")
  (return-type "none")
  (parameters
    '("const-char*" "act_iid")
    '("GClosure*" "factory_cb")
  )
)

(define-function generic_factory_main
  (c-name "matecomponent_generic_factory_main")
  (return-type "int")
  (parameters
    '("const-char*" "act_iid")
    '("MateComponentFactoryCallback" "factory_cb")
    '("gpointer" "user_data")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-i18n.h



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-item-container.h

(define-function item_container_get_type
  (c-name "matecomponent_item_container_get_type")
  (return-type "GType")
)

(define-function item_container_new
  (c-name "matecomponent_item_container_new")
  (is-constructor-of MateComponentItemContainer)
  (return-type "MateComponentItemContainer*")
  (caller-owns-return #f)
)

(define-method add
  (of-object "MateComponentItemContainer")
  (c-name "matecomponent_item_container_add")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("MateComponentObject*" "object")
  )
)

(define-method remove_by_name
  (of-object "MateComponentItemContainer")
  (c-name "matecomponent_item_container_remove_by_name")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-listener.h

(define-function listener_get_type
  (c-name "matecomponent_listener_get_type")
  (return-type "GType")
)

(define-function listener_new
  (c-name "matecomponent_listener_new")
  (is-constructor-of MateComponentListener)
  (return-type "MateComponentListener*")
  (caller-owns-return #f)
  (parameters
    '("MateComponentListenerCallbackFn" "event_cb")
    '("gpointer" "user_data")
  )
)

(define-function listener_new_closure
  (c-name "matecomponent_listener_new_closure")
  (is-constructor-of MateComponentListener)  
  (return-type "MateComponentListener*")
  (caller-owns-return #f)
  (parameters
    '("GClosure*" "event_closure")
  )
)

(define-function event_make_name
  (c-name "matecomponent_event_make_name")
  (return-type "char*")
  (parameters
    '("const-char*" "idl_path")
    '("const-char*" "kind")
    '("const-char*" "subtype")
  )
)

(define-function event_type
  (c-name "matecomponent_event_type")
  (return-type "char*")
  (parameters
    '("const-char*" "event_name")
  )
)

(define-function event_subtype
  (c-name "matecomponent_event_subtype")
  (return-type "char*")
  (parameters
    '("const-char*" "event_name")
  )
)

(define-function event_kind
  (c-name "matecomponent_event_kind")
  (return-type "char*")
  (parameters
    '("const-char*" "event_name")
  )
)

(define-function event_idl_path
  (c-name "matecomponent_event_idl_path")
  (return-type "char*")
  (parameters
    '("const-char*" "event_name")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-macros.h



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-main.h

(define-function init
  (c-name "matecomponent_init")
  (return-type "gboolean")
  (parameters
    '("int*" "argc")
    '("char**" "argv")
  )
)

(define-function init_full
  (c-name "matecomponent_init_full")
  (return-type "gboolean")
  (parameters
    '("int*" "argc")
    '("char**" "argv")
    '("CORBA_ORB" "orb")
    '("PortableServer_POA" "poa")
    '("PortableServer_POAManager" "manager")
  )
)

(define-function debug_shutdown
  (c-name "matecomponent_debug_shutdown")
  (return-type "int")
)

(define-function main
  (c-name "matecomponent_main")
  (return-type "none")
)

(define-function main_quit
  (c-name "matecomponent_main_quit")
  (return-type "none")
)

;(define-function main_level
;  (c-name "matecomponent_main_level")
;  (return-type "none")
;)

(define-function activate
  (c-name "matecomponent_activate")
  (return-type "gboolean")
)

(define-function setup_x_error_handler
  (c-name "matecomponent_setup_x_error_handler")
  (return-type "none")
)

(define-function orb
  (c-name "matecomponent_orb")
  (return-type "CORBA_ORB")
)

(define-function poa
  (c-name "matecomponent_poa")
  (return-type "PortableServer_POA")
)

(define-function poa_manager
  (c-name "matecomponent_poa_manager")
  (return-type "PortableServer_POAManager")
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-moniker.h

(define-function moniker_get_type
  (c-name "matecomponent_moniker_get_type")
  (return-type "GType")
)

(define-method construct
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_construct")
  (return-type "MateComponentMoniker*")
  (parameters
    '("const-char*" "prefix")
  )
)

(define-method get_parent
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_get_parent")
  (return-type "MateComponent_Moniker")
  (caller-owns-return #f)
  (parameters
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-method set_parent
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_set_parent")
  (return-type "none")
  (parameters
    '("MateComponent_Moniker" "parent")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-method get_name
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_get_name")
  (return-type "const-char*")
)

(define-method get_name_full
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_get_name_full")
  (return-type "const-char*")
)

(define-method get_name_escaped
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_get_name_escaped")
  (return-type "char*")
)

(define-method set_name
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_set_name")
  (return-type "none")
  (parameters
    '("const-char*" "unescaped_name")
  )
)

(define-method get_prefix
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_get_prefix")
  (return-type "const-char*")
)

(define-method set_case_sensitive
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_set_case_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "sensitive")
  )
)

(define-method get_case_sensitive
  (of-object "MateComponentMoniker")
  (c-name "matecomponent_moniker_get_case_sensitive")
  (return-type "gboolean")
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-moniker-simple.h

(define-function moniker_simple_get_type
  (c-name "matecomponent_moniker_simple_get_type")
  (return-type "GType")
)

(define-method construct
  (of-object "MateComponentMonikerSimple")
  (c-name "matecomponent_moniker_simple_construct")
  (return-type "MateComponentMoniker*")
  (parameters
    '("const-char*" "name")
    '("GClosure*" "resolve_closure")
  )
)

(define-function moniker_simple_new
  (c-name "matecomponent_moniker_simple_new")
  (is-constructor-of MateComponentMoniker)
  (return-type "MateComponentMoniker*")
  (caller-owns-return #f)
  (parameters
    '("const-char*" "name")
    '("MateComponentMonikerSimpleResolveFn" "resolve_fn")
  )
)

(define-function moniker_simple_new_closure
  (c-name "matecomponent_moniker_simple_new_closure")
  (is-constructor-of MateComponentMoniker)
  (return-type "MateComponentMoniker*")
  (caller-owns-return #f)
  (parameters
    '("const-char*" "name")
    '("GClosure*" "resolve_closure")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-moniker-util.h


(define-function get_object
  (c-name "matecomponent_get_object")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("const-CORBA_char*" "name")
    '("const-char*" "interface_name")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function moniker_client_new_from_name
  (c-name "matecomponent_moniker_client_new_from_name")
  (return-type "MateComponent_Moniker")
  (caller-owns-return #f)
  (parameters
    '("const-CORBA_char*" "name")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function moniker_client_get_name
  (c-name "matecomponent_moniker_client_get_name")
  (return-type "CORBA_char*")
  (parameters
    '("MateComponent_Moniker" "moniker")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function moniker_client_resolve_default
  (c-name "matecomponent_moniker_client_resolve_default")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("MateComponent_Moniker" "moniker")
    '("const-char*" "interface_name")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function moniker_client_equal
  (c-name "matecomponent_moniker_client_equal")
  (return-type "gboolean")
  (parameters
    '("MateComponent_Moniker" "moniker")
    '("const-CORBA_char*" "name")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function get_object_async
  (c-name "matecomponent_get_object_async")
  (return-type "none")
  (parameters
    '("const-CORBA_char*" "name")
    '("const-char*" "interface_name")
    '("CORBA_Environment*" "ev")
    '("MateComponentMonikerAsyncFn" "cb")
    '("gpointer" "user_data")
  )
)

(define-function moniker_client_new_from_name_async
  (c-name "matecomponent_moniker_client_new_from_name_async")
  (return-type "none")
  (parameters
    '("const-CORBA_char*" "name")
    '("CORBA_Environment*" "ev")
    '("MateComponentMonikerAsyncFn" "cb")
    '("gpointer" "user_data")
  )
)

(define-function moniker_resolve_async
  (c-name "matecomponent_moniker_resolve_async")
  (return-type "none")
  (parameters
    '("MateComponent_Moniker" "moniker")
    '("MateComponent_ResolveOptions*" "options")
    '("const-char*" "interface_name")
    '("CORBA_Environment*" "ev")
    '("MateComponentMonikerAsyncFn" "cb")
    '("gpointer" "user_data")
  )
)

(define-function moniker_resolve_async_default
  (c-name "matecomponent_moniker_resolve_async_default")
  (return-type "none")
  (parameters
    '("MateComponent_Moniker" "moniker")
    '("const-char*" "interface_name")
    '("CORBA_Environment*" "ev")
    '("MateComponentMonikerAsyncFn" "cb")
    '("gpointer" "user_data")
  )
)

(define-function moniker_util_get_parent_name
  (c-name "matecomponent_moniker_util_get_parent_name")
  (return-type "CORBA_char*")
  (parameters
    '("MateComponent_Moniker" "moniker")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function moniker_util_qi_return
  (c-name "matecomponent_moniker_util_qi_return")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("MateComponent_Unknown" "object")
    '("const-CORBA_char*" "requested_interface")
    '("CORBA_Environment*" "ev")
  )
)

(define-function moniker_util_parse_name
  (c-name "matecomponent_moniker_util_parse_name")
  (return-type "const-char*")
  (parameters
    '("const-char*" "name")
    '("int*" "plen")
  )
)

(define-function moniker_util_seek_std_separator
  (c-name "matecomponent_moniker_util_seek_std_separator")
  (return-type "int")
  (parameters
    '("const-CORBA_char*" "str")
    '("int" "min_idx")
  )
)

(define-function moniker_util_escape
  (c-name "matecomponent_moniker_util_escape")
  (return-type "char*")
  (parameters
    '("const-char*" "string")
    '("int" "offset")
  )
)

(define-function moniker_util_unescape
  (c-name "matecomponent_moniker_util_unescape")
  (return-type "char*")
  (parameters
    '("const-char*" "string")
    '("int" "num_chars")
  )
)

(define-function url_register
  (c-name "matecomponent_url_register")
  (return-type "none")
  (parameters
    '("char*" "oafiid")
    '("char*" "url")
    '("char*" "mime_type")
    '("MateComponent_Unknown" "object")
    '("CORBA_Environment*" "ev")
  )
)

(define-function url_unregister
  (c-name "matecomponent_url_unregister")
  (return-type "none")
  (parameters
    '("char*" "oafiid")
    '("char*" "url")
    '("CORBA_Environment*" "ev")
  )
)

(define-function url_lookup
  (c-name "matecomponent_url_lookup")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("char*" "oafiid")
    '("char*" "url")
    '("CORBA_Environment*" "ev")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-object.h

(define-function object_get_type
  (c-name "matecomponent_object_get_type")
  (return-type "GType")
)

(define-method add_interface
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_add_interface")
  (return-type "none")
  (parameters
    '("MateComponentObject*" "newobj")
  )
)

(define-method query_local_interface
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_query_local_interface")
  (return-type "MateComponentObject*")
  (parameters
    '("const-char*" "repo_id")
  )
)

(define-method ref
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_ref")
  (return-type "none")
)

(define-method unref
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_unref")
  (return-type "none")
)

(define-method query_interface
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_query_interface")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("const-char*" "repo_id")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-method corba_objref
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_corba_objref")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
)

(define-function object_dup_ref
  (c-name "matecomponent_object_dup_ref")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("MateComponent_Unknown" "object")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function object_release_unref
  (c-name "matecomponent_object_release_unref")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("MateComponent_Unknown" "object")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-method ref
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_ref")
  (return-type "gpointer")
)

(define-method idle_unref
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_idle_unref")
  (return-type "none")
)

(define-method unref
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_unref")
  (return-type "gpointer")
)

(define-method set_immortal
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_set_immortal")
  (return-type "none")
  (parameters
    '("gboolean" "immortal")
  )
)

(define-method trace_refs
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_trace_refs")
  (return-type "gpointer")
  (parameters
    '("const-char*" "fn")
    '("int" "line")
    '("gboolean" "ref")
  )
)

(define-method dump_interfaces
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_dump_interfaces")
  (return-type "none")
)

(define-method check_env
  (of-object "MateComponentObject")
  (c-name "matecomponent_object_check_env")
  (return-type "none")
  (parameters
    '("CORBA_Object" "corba_object")
    '("CORBA_Environment*" "ev")
  )
)

(define-function object_list_unref_all
  (c-name "matecomponent_object_list_unref_all")
  (return-type "none")
  (parameters
    '("GList**" "list")
  )
)

(define-function object_slist_unref_all
  (c-name "matecomponent_object_slist_unref_all")
  (return-type "none")
  (parameters
    '("GSList**" "list")
  )
)

(define-function object
  (c-name "matecomponent_object")
  (return-type "MateComponentObject*")
  (parameters
    '("gpointer" "p")
  )
)

(define-function type_setup
  (c-name "matecomponent_type_setup")
  (return-type "gboolean")
  (parameters
    '("GType" "type")
    '("MateComponentObjectPOAFn" "init_fn")
    '("MateComponentObjectPOAFn" "fini_fn")
    '("int" "epv_struct_offset")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-persist-client.h

(define-function object_from_stream
  (c-name "matecomponent_object_from_stream")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("MateComponent_Stream" "stream")
    '("CORBA_Environment*" "opt_ev")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-persist-file.h

(define-function persist_file_get_type
  (c-name "matecomponent_persist_file_get_type")
  (return-type "GType")
)

(define-function persist_file_new
  (c-name "matecomponent_persist_file_new")
  (is-constructor-of MateComponentPersistFile)
  (return-type "MateComponentPersistFile*")
  (caller-owns-return #f)
  (parameters
    '("MateComponentPersistFileIOFn" "load_fn")
    '("MateComponentPersistFileIOFn" "save_fn")
    '("const-gchar*" "iid")
    '("void*" "closure")
  )
)

(define-method construct
  (of-object "MateComponentPersistFile")
  (c-name "matecomponent_persist_file_construct")
  (return-type "MateComponentPersistFile*")
  (parameters
    '("MateComponentPersistFileIOFn" "load_fn")
    '("MateComponentPersistFileIOFn" "save_fn")
    '("const-gchar*" "iid")
    '("void*" "closure")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-persist.h

(define-function persist_get_type
  (c-name "matecomponent_persist_get_type")
  (return-type "GType")
)

(define-function persist_generate_content_types
  (c-name "matecomponent_persist_generate_content_types")
  (return-type "MateComponent_Persist_ContentTypeList*")
  (caller-owns-return #f)
  (parameters
    '("int" "num")
  )
  (varargs #t)
)

(define-method construct
  (of-object "MateComponentPersist")
  (c-name "matecomponent_persist_construct")
  (return-type "MateComponentPersist*")
  (parameters
    '("const-gchar*" "iid")
  )
)

(define-method set_dirty
  (of-object "MateComponentPersist")
  (c-name "matecomponent_persist_set_dirty")
  (return-type "none")
  (parameters
    '("gboolean" "dirty")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-persist-stream.h

(define-function persist_stream_get_type
  (c-name "matecomponent_persist_stream_get_type")
  (return-type "GType")
)

(define-function persist_stream_new
  (c-name "matecomponent_persist_stream_new")
  (is-constructor-of MateComponentPersistStream)  
  (return-type "MateComponentPersistStream*")
  (caller-owns-return #f)
  (parameters
    '("MateComponentPersistStreamIOFn" "load_fn")
    '("MateComponentPersistStreamIOFn" "save_fn")
    '("MateComponentPersistStreamTypesFn" "types_fn")
    '("const-gchar*" "iid")
    '("void*" "closure")
  )
)

(define-method construct
  (of-object "MateComponentPersistStream")
  (c-name "matecomponent_persist_stream_construct")
  (return-type "MateComponentPersistStream*")
  (parameters
    '("MateComponentPersistStreamIOFn" "load_fn")
    '("MateComponentPersistStreamIOFn" "save_fn")
    '("MateComponentPersistStreamTypesFn" "types_fn")
    '("const-gchar*" "iid")
    '("void*" "closure")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-property-bag-client.h

(define-function pbclient_get_string
  (c-name "matecomponent_pbclient_get_string")
  (return-type "gchar*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_string
  (c-name "matecomponent_pbclient_get_default_string")
  (return-type "gchar*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_string_with_default
  (c-name "matecomponent_pbclient_get_string_with_default")
  (return-type "gchar*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gchar*" "defval")
    '("gboolean*" "def")
  )
)

(define-function pbclient_get_short
  (c-name "matecomponent_pbclient_get_short")
  (return-type "gint16")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_short
  (c-name "matecomponent_pbclient_get_default_short")
  (return-type "gint16")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_short_with_default
  (c-name "matecomponent_pbclient_get_short_with_default")
  (return-type "gint16")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gint16" "defval")
    '("gboolean*" "def")
  )
)

(define-function pbclient_get_ushort
  (c-name "matecomponent_pbclient_get_ushort")
  (return-type "guint16")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_ushort
  (c-name "matecomponent_pbclient_get_default_ushort")
  (return-type "guint16")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_ushort_with_default
  (c-name "matecomponent_pbclient_get_ushort_with_default")
  (return-type "guint16")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("guint16" "defval")
    '("gboolean*" "def")
  )
)

(define-function pbclient_get_long
  (c-name "matecomponent_pbclient_get_long")
  (return-type "gint32")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_long
  (c-name "matecomponent_pbclient_get_default_long")
  (return-type "gint32")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_long_with_default
  (c-name "matecomponent_pbclient_get_long_with_default")
  (return-type "gint32")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gint32" "defval")
    '("gboolean*" "def")
  )
)

(define-function pbclient_get_ulong
  (c-name "matecomponent_pbclient_get_ulong")
  (return-type "guint32")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_ulong
  (c-name "matecomponent_pbclient_get_default_ulong")
  (return-type "guint32")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_ulong_with_default
  (c-name "matecomponent_pbclient_get_ulong_with_default")
  (return-type "guint32")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("guint32" "defval")
    '("gboolean*" "def")
  )
)

(define-function pbclient_get_float
  (c-name "matecomponent_pbclient_get_float")
  (return-type "gfloat")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_float
  (c-name "matecomponent_pbclient_get_default_float")
  (return-type "gfloat")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_float_with_default
  (c-name "matecomponent_pbclient_get_float_with_default")
  (return-type "gfloat")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gfloat" "defval")
    '("gboolean*" "def")
  )
)

(define-function pbclient_get_double
  (c-name "matecomponent_pbclient_get_double")
  (return-type "gdouble")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_double
  (c-name "matecomponent_pbclient_get_default_double")
  (return-type "gdouble")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_double_with_default
  (c-name "matecomponent_pbclient_get_double_with_default")
  (return-type "gdouble")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gdouble" "defval")
    '("gboolean*" "def")
  )
)

(define-function pbclient_get_boolean
  (c-name "matecomponent_pbclient_get_boolean")
  (return-type "gboolean")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_boolean
  (c-name "matecomponent_pbclient_get_default_boolean")
  (return-type "gboolean")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_boolean_with_default
  (c-name "matecomponent_pbclient_get_boolean_with_default")
  (return-type "gboolean")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gboolean" "defval")
    '("gboolean*" "def")
  )
)

(define-function pbclient_get_char
  (c-name "matecomponent_pbclient_get_char")
  (return-type "gchar")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_char
  (c-name "matecomponent_pbclient_get_default_char")
  (return-type "gchar")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_char_with_default
  (c-name "matecomponent_pbclient_get_char_with_default")
  (return-type "gchar")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gchar" "defval")
    '("gboolean*" "def")
  )
)

(define-function pbclient_get_value
  (c-name "matecomponent_pbclient_get_value")
  (return-type "CORBA_any*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_TypeCode" "opt_tc")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_default_value
  (c-name "matecomponent_pbclient_get_default_value")
  (return-type "CORBA_any*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_TypeCode" "opt_tc")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_string
  (c-name "matecomponent_pbclient_set_string")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("const-char*" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_short
  (c-name "matecomponent_pbclient_set_short")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gint16" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_ushort
  (c-name "matecomponent_pbclient_set_ushort")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("guint16" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_long
  (c-name "matecomponent_pbclient_set_long")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gint32" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_ulong
  (c-name "matecomponent_pbclient_set_ulong")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("guint32" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_float
  (c-name "matecomponent_pbclient_set_float")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gfloat" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_double
  (c-name "matecomponent_pbclient_set_double")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gdouble" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_boolean
  (c-name "matecomponent_pbclient_set_boolean")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gboolean" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_char
  (c-name "matecomponent_pbclient_set_char")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("gchar" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set_value
  (c-name "matecomponent_pbclient_set_value")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_any*" "value")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_doc_title
  (c-name "matecomponent_pbclient_get_doc_title")
  (return-type "char*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_doc
  (c-name "matecomponent_pbclient_get_doc")
  (return-type "char*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_get_keys
  (c-name "matecomponent_pbclient_get_keys")
  (return-type "GList*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_free_keys
  (c-name "matecomponent_pbclient_free_keys")
  (return-type "none")
  (parameters
    '("GList*" "key_list")
  )
)

(define-function pbclient_get_flags
  (c-name "matecomponent_pbclient_get_flags")
  (return-type "MateComponent_PropertyFlags")
  (caller-owns-return #f)
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("const-char*" "key")
    '("CORBA_Environment*" "opt_ev")
  )
)

(define-function pbclient_set
  (c-name "matecomponent_pbclient_set")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("CORBA_Environment*" "opt_ev")
    '("const-char*" "first_prop")
  )
  (varargs #t)
)

(define-function pbclient_get
  (c-name "matecomponent_pbclient_get")
  (return-type "none")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("CORBA_Environment*" "opt_ev")
    '("const-char*" "first_prop")
  )
  (varargs #t)
)

(define-function pbclient_setv
  (c-name "matecomponent_pbclient_setv")
  (return-type "char*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("CORBA_Environment*" "ev")
    '("const-char*" "first_prop")
    '("va_list" "var_args")
  )
)

(define-function pbclient_getv
  (c-name "matecomponent_pbclient_getv")
  (return-type "char*")
  (parameters
    '("MateComponent_PropertyBag" "bag")
    '("CORBA_Environment*" "ev")
    '("const-char*" "first_prop")
    '("va_list" "var_args")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-property-bag.h

(define-function property_bag_get_type
  (c-name "matecomponent_property_bag_get_type")
  (return-type "GType")
)

(define-function property_bag_new
  (c-name "matecomponent_property_bag_new")
  (is-constructor-of MateComponentPropertyBag)
  (return-type "MateComponentPropertyBag*")
  (caller-owns-return #f)
  (parameters
    '("MateComponentPropertyGetFn" "get_prop_cb")
    '("MateComponentPropertySetFn" "set_prop_cb")
    '("gpointer" "user_data")
  )
)

(define-function property_bag_new_closure
  (c-name "matecomponent_property_bag_new_closure")
  (is-constructor-of MateComponentPropertyBag)    
  (return-type "MateComponentPropertyBag*")
  (caller-owns-return #f)
  (parameters
    '("GClosure*" "get_prop")
    '("GClosure*" "set_prop")
  )
)

(define-function property_bag_new_full
  (c-name "matecomponent_property_bag_new_full")
  (return-type "MateComponentPropertyBag*")
  (caller-owns-return #f)
  (parameters
    '("GClosure*" "get_prop")
    '("GClosure*" "set_prop")
    '("MateComponentEventSource*" "event_source")
  )
)

(define-method construct
  (of-object "MateComponentPropertyBag")
  (c-name "matecomponent_property_bag_construct")
  (return-type "MateComponentPropertyBag*")
  (parameters
    '("GClosure*" "get_prop")
    '("GClosure*" "set_prop")
    '("MateComponentEventSource*" "event_source")
  )
)

(define-method add
  (of-object "MateComponentPropertyBag")
  (c-name "matecomponent_property_bag_add")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("int" "idx")
    '("MateComponentArgType" "type")
    '("MateComponentArg*" "default_value")
    '("const-char*" "doctitle")
    '("MateComponent_PropertyFlags" "flags")
  )
)

(define-method add_full
  (of-object "MateComponentPropertyBag")
  (c-name "matecomponent_property_bag_add_full")
  (return-type "none")
  (parameters
    '("const-char*" "name")
    '("int" "idx")
    '("MateComponentArgType" "type")
    '("MateComponentArg*" "default_value")
    '("const-char*" "doctitle")
    '("const-char*" "docstring")
    '("MateComponent_PropertyFlags" "flags")
    '("GClosure*" "get_prop")
    '("GClosure*" "set_prop")
  )
)

(define-method remove
  (of-object "MateComponentPropertyBag")
  (c-name "matecomponent_property_bag_remove")
  (return-type "none")
  (parameters
    '("const-char*" "name")
  )
)

(define-method map_params
  (of-object "MateComponentPropertyBag")
  (c-name "matecomponent_property_bag_map_params")
  (return-type "none")
  (parameters
    '("GObject*" "on_instance")
    '("const-GParamSpec**" "pspecs")
    '("guint" "n_params")
  )
)

(define-method get_prop_list
  (of-object "MateComponentPropertyBag")
  (c-name "matecomponent_property_bag_get_prop_list")
  (return-type "GList*")
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-shlib-factory.h

(define-function shlib_factory_get_type
  (c-name "matecomponent_shlib_factory_get_type")
  (return-type "GType")
)

(define-method construct
  (of-object "MateComponentShlibFactory")
  (c-name "matecomponent_shlib_factory_construct")
  (return-type "MateComponentShlibFactory*")
  (parameters
    '("const-char*" "component_id")
    '("PortableServer_POA" "poa")
    '("gpointer" "act_impl_ptr")
    '("GClosure*" "closure")
  )
)

(define-function shlib_factory_new
  (c-name "matecomponent_shlib_factory_new")
  (is-constructor-of MateComponentShlibFactory)
  (return-type "MateComponentShlibFactory*")
  (caller-owns-return #f)
  (parameters
    '("const-char*" "component_id")
    '("PortableServer_POA" "poa")
    '("gpointer" "act_impl_ptr")
    '("MateComponentFactoryCallback" "factory_cb")
    '("gpointer" "user_data")
  )
)

(define-function shlib_factory_new_closure
  (c-name "matecomponent_shlib_factory_new_closure")
  (is-constructor-of MateComponentShlibFactory)
  (return-type "MateComponentShlibFactory*")
  (caller-owns-return #f)
  (parameters
    '("const-char*" "component_id")
    '("PortableServer_POA" "poa")
    '("gpointer" "act_impl_ptr")
    '("GClosure*" "factory_closure")
  )
)

(define-function shlib_factory_std
  (c-name "matecomponent_shlib_factory_std")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("const-char*" "component_id")
    '("PortableServer_POA" "poa")
    '("gpointer" "act_impl_ptr")
    '("MateComponentFactoryCallback" "factory_cb")
    '("gpointer" "user_data")
    '("CORBA_Environment*" "ev")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-storage.h



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-storage-memory.h

(define-function storage_mem_get_type
  (c-name "matecomponent_storage_mem_get_type")
  (return-type "GType")
)

(define-function storage_mem_create
  (c-name "matecomponent_storage_mem_create")
  (return-type "MateComponentObject*")
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-stream-client.h

(define-function stream_client_read
  (c-name "matecomponent_stream_client_read")
  (return-type "guint8*")
  (parameters
    '("const-MateComponent_Stream" "stream")
    '("const-size_t" "size")
    '("CORBA_long*" "length_read")
    '("CORBA_Environment*" "ev")
  )
)

(define-function stream_client_write_string
  (c-name "matecomponent_stream_client_write_string")
  (return-type "none")
  (parameters
    '("const-MateComponent_Stream" "stream")
    '("const-char*" "str")
    '("const-gboolean" "terminate")
    '("CORBA_Environment*" "ev")
  )
)

(define-function stream_client_printf
  (c-name "matecomponent_stream_client_printf")
  (return-type "none")
  (parameters
    '("const-MateComponent_Stream" "stream")
    '("const-gboolean" "terminate")
    '("CORBA_Environment*" "ev")
    '("const-char*" "fmt")
  )
  (varargs #t)
)

(define-function stream_client_read_string
  (c-name "matecomponent_stream_client_read_string")
  (return-type "CORBA_long")
  (parameters
    '("const-MateComponent_Stream" "stream")
    '("char**" "str")
    '("CORBA_Environment*" "ev")
  )
)

(define-function stream_client_get_length
  (c-name "matecomponent_stream_client_get_length")
  (return-type "CORBA_long")
  (parameters
    '("const-MateComponent_Stream" "stream")
    '("CORBA_Environment*" "ev")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-stream.h



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-stream-memory.h

(define-function stream_mem_get_type
  (c-name "matecomponent_stream_mem_get_type")
  (return-type "GType")
)

(define-method construct
  (of-object "MateComponentStreamMem")
  (c-name "matecomponent_stream_mem_construct")
  (return-type "MateComponentStreamMem*")
  (parameters
    '("const-char*" "buffer")
    '("size_t" "size")
    '("gboolean" "read_only")
    '("gboolean" "resizable")
  )
)

(define-function stream_mem_create
  (c-name "matecomponent_stream_mem_create")
  (is-constructor-of "MateComponentStreamMem")
  (return-type "MateComponentStream*")
  (parameters
    '("const-char*" "buffer")
    '("gboolean" "read_only")
    '("gboolean" "resizable")
  )
)

(define-method get_buffer
  (of-object "MateComponentStreamMem")
  (c-name "matecomponent_stream_mem_get_buffer")
  (return-type "const-char*")
)

;(define-method get_size
;  (of-object "MateComponentStreamMem")
;  (c-name "matecomponent_stream_mem_get_size")
;  (return-type "size_t")
;)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-types.h

(define-function unknown_get_type
  (c-name "matecomponent_unknown_get_type")
  (return-type "GType")
)

(define-function corba_any_get_type
  (c-name "matecomponent_corba_any_get_type")
  (return-type "GType")
)

(define-function corba_object_get_type
  (c-name "matecomponent_corba_object_get_type")
  (return-type "GType")
)

(define-function corba_typecode_get_type
  (c-name "matecomponent_corba_typecode_get_type")
  (return-type "GType")
)

(define-function corba_exception_get_type
  (c-name "matecomponent_corba_exception_get_type")
  (return-type "GType")
)

(define-function value_get_unknown
  (c-name "matecomponent_value_get_unknown")
  (return-type "MateComponent_Unknown")
  (caller-owns-return #f)
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_corba_any
  (c-name "matecomponent_value_get_corba_any")
  (return-type "MateComponentArg*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_corba_object
  (c-name "matecomponent_value_get_corba_object")
  (return-type "CORBA_Object")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_corba_typecode
  (c-name "matecomponent_value_get_corba_typecode")
  (return-type "CORBA_TypeCode")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_get_corba_exception
  (c-name "matecomponent_value_get_corba_exception")
  (return-type "const-CORBA_Environment*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function value_set_corba_object
  (c-name "matecomponent_value_set_corba_object")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-CORBA_Object" "object")
  )
)

(define-function value_set_unknown
  (c-name "matecomponent_value_set_unknown")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-MateComponent_Unknown" "unknown")
  )
)

(define-function value_set_corba_any
  (c-name "matecomponent_value_set_corba_any")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-CORBA_any*" "any")
  )
)

(define-function value_set_corba_typecode
  (c-name "matecomponent_value_set_corba_typecode")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-CORBA_TypeCode" "tc")
  )
)

(define-function value_set_corba_environment
  (c-name "matecomponent_value_set_corba_environment")
  (return-type "none")
  (parameters
    '("GValue*" "value")
    '("const-CORBA_Environment*" "ev")
  )
)

(define-function closure_invoke_va_list
  (c-name "matecomponent_closure_invoke_va_list")
  (return-type "none")
  (parameters
    '("GClosure*" "closure")
    '("GValue*" "return_value")
    '("va_list" "var_args")
  )
)

(define-function closure_invoke
  (c-name "matecomponent_closure_invoke")
  (return-type "none")
  (parameters
    '("GClosure*" "closure")
    '("GType" "return_type")
  )
  (varargs #t)
)

(define-function closure_store
  (c-name "matecomponent_closure_store")
  (return-type "GClosure*")
  (parameters
    '("GClosure*" "closure")
    '("GClosureMarshal" "default_marshal")
  )
)



;; From /home/james/cvs/mate2/libmatecomponent/matecomponent/matecomponent-xobject.h

;; From matecomponent-item-handler.h

(define-function item_handler_get_type
  (c-name "matecomponent_item_handler_get_type")
  (return-type "GType")
)

(define-function item_handler_new
  (c-name "matecomponent_item_handler_new")
  (is-constructor-of MateComponentItemHandler)  
  (return-type "MateComponentItemHandler*")
  (caller-owns-return #f)
  (parameters
    '("MateComponentItemHandlerEnumObjectsFn" "enum_objects")
    '("MateComponentItemHandlerGetObjectFn" "get_object")
    '("gpointer" "user_data")
  )
)

(define-function item_handler_new_closure
  (c-name "matecomponent_item_handler_new_closure")
  (is-constructor-of MateComponentItemHandler)  
  (return-type "MateComponentItemHandler*")
  (caller-owns-return #f)
  (parameters
    '("GClosure*" "enum_objects")
    '("GClosure*" "get_object")
  )
)

(define-method construct
  (of-object "MateComponentItemHandler")
  (c-name "matecomponent_item_handler_construct")
  (return-type "MateComponentItemHandler*")
  (parameters
    '("GClosure*" "enum_objects")
    '("GClosure*" "get_object")
  )
)

(define-function item_option_parse
  (c-name "matecomponent_item_option_parse")
  (return-type "GSList*")
  (parameters
    '("const-char*" "option_string")
  )
)

(define-function item_options_free
  (c-name "matecomponent_item_options_free")
  (return-type "none")
  (parameters
    '("GSList*" "options")
  )
)

;; From matecomponent-foreign-object.h
(define-function foreign_object_new
  (c-name "matecomponent_foreign_object_new")
  (is-constructor-of MateComponentForeignObject)
  (return-type "MateComponentObject*")
  (caller-owns-return #f)
  (parameters
   '("CORBA_Object" "corba_objref")
   )
)

;; From matecomponent-application.h
(define-function application_new
  (c-name "matecomponent_application_new")
  (is-constructor-of MateComponentApplication)
  (return-type "MateComponentObject*")
  (caller-owns-return #f)
  (parameters
   '("const-gchar*" "name")
   )
)

(define-method register_message
  (of-object "MateComponentApplication")
  (c-name "matecomponent_application_register_message_v")
  (return-type "none")
  (parameters
   '("const-gchar*" "name")
   '("const-gchar*" "description")
   '("GClosure*"    "closure")
   '("GType"        "return_type")
   '("GType*"       "arg_types")
  )
)

(define-method create_serverinfo
  (of-object "MateComponentApplication")
  (c-name "matecomponent_application_create_serverinfo")
  (parameters
   '("const-gchar*" "envp"))
  (return-type "gchar*")
)

(define-method register_unique
  (of-object "MateComponentApplication")
  (c-name "matecomponent_application_register_unique")
  (parameters
   '("const-gchar*" "serverinfo"))
  (return-type "MateComponentAppClient*")
)

(define-method new_instance
  (of-object "MateComponentApplication")
  (c-name "matecomponent_application_new_instance")
  (return-type "gint")
  (parameters
   '("gint" "argc")
   '("gchar*" "argv")
   )
)

;; From matecomponent-app-client.h


(define-function app_client_new
  (c-name "matecomponent_app_client_new")
  (is-constructor-of MateComponentAppClient)
  (return-type "MateComponentAppClient*")
  (parameters
   '("CORBA_Object" "app_server")
   )
)

(define-method msg_send
  (of-object "MateComponentAppClient")
  (c-name "matecomponent_app_client_msg_send_argv")
  (return-type "GValue*")
  (parameters
   '("const-gchar*"       "message")
   '("const-GValue**"     "argv")
   '("CORBA_Environment*" "ev")
   )
)

(define-method new_instance
  (of-object "MateComponentAppClient")
  (c-name "matecomponent_app_client_new_instance")
  (return-type "gint")
  (parameters
   '("gint" "argc")
   '("gchar*" "argv")
   '("CORBA_Environment*" "ev")
   )
)

(define-method msg_list
  (of-object "MateComponentAppClient")
  (c-name "matecomponent_app_client_msg_list")
  ;(return-type "MateComponentAppClientMsgDesc const *")
)

